import * as tslib_1 from "tslib";
import * as React from 'react';
import { autobind } from '@shopify/javascript-utilities/decorators';
import { classNames } from '@shopify/react-utilities/styles';
import { getWidth } from '../../utilities/getWidth';
import { menu } from '../../icons';
import { withAppProvider } from '../AppProvider';
import Icon from '../Icon';
import Image from '../Image';
import UnstyledLink from '../UnstyledLink';
import { SearchField, UserMenu, Search, Menu } from './components';
import * as styles from './TopBar.scss';
export class TopBar extends React.PureComponent {
    constructor() {
        super(...arguments);
        this.state = {
            focused: false,
        };
    }
    render() {
        const { showNavigationToggle, userMenu, searchResults, searchField, secondaryMenu, searchResultsVisible, onNavigationToggle, onSearchResultsDismiss, polaris: { theme: { logo }, }, } = this.props;
        const { focused } = this.state;
        const className = classNames(styles.NavigationIcon, focused && styles.focused);
        const navigationButtonMarkup = showNavigationToggle ? (<button type="button" className={className} onClick={onNavigationToggle} onFocus={this.handleFocus} onBlur={this.handleBlur} aria-label="Toggle menu">
        <Icon source={menu} color="white"/>
      </button>) : null;
        const width = getWidth(logo, 104);
        const logoMarkup = logo ? (<UnstyledLink url={logo.url || ''} className={styles.LogoLink} style={{ width }}>
        <Image source={logo.topBarSource || ''} alt={logo.accessibilityLabel || ''} className={styles.Logo} style={{ width }}/>
      </UnstyledLink>) : null;
        const searchResultsMarkup = searchResults && searchResultsVisible ? (<Search visible={searchResultsVisible} onDismiss={onSearchResultsDismiss}>
          {searchResults}
        </Search>) : null;
        const searchMarkup = searchField ? (<React.Fragment>
        {searchField}
        {searchResultsMarkup}
      </React.Fragment>) : null;
        return (<div className={styles.TopBar}>
        {navigationButtonMarkup}
        <div className={styles.LogoContainer}>{logoMarkup}</div>
        <div className={styles.Contents}>
          {searchMarkup}
          {secondaryMenu}
          {userMenu}
        </div>
      </div>);
    }
    handleFocus() {
        this.setState({ focused: true });
    }
    handleBlur() {
        this.setState({ focused: false });
    }
}
TopBar.UserMenu = UserMenu;
TopBar.SearchField = SearchField;
TopBar.Menu = Menu;
tslib_1.__decorate([
    autobind
], TopBar.prototype, "handleFocus", null);
tslib_1.__decorate([
    autobind
], TopBar.prototype, "handleBlur", null);
export default withAppProvider()(TopBar);
