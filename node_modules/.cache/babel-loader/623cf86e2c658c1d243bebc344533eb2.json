{"ast":null,"code":"'use strict';\n\nvar assign = require('lodash/assign');\n\nvar omit = require('lodash/omit');\n\nvar base = require('../mixins/base');\n/**\n * Creates a Comment instance.\n *\n * @param {Shopify} shopify Reference to the Shopify instance\n * @constructor\n * @public\n */\n\n\nfunction Comment(shopify) {\n  this.shopify = shopify;\n  this.name = 'comments';\n  this.key = 'comment';\n}\n\nassign(Comment.prototype, omit(base, ['delete']));\n/**\n * Marks a comment as spam.\n *\n * @param {Number} id Comment ID\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\nComment.prototype.spam = function spam(id) {\n  var url = this.buildUrl(\"\".concat(id, \"/spam\"));\n  return this.shopify.request(url, 'POST', undefined, {});\n};\n/**\n * Marks a comment as not spam.\n *\n * @param {Number} id Comment ID\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\n\nComment.prototype.notSpam = function notSpam(id) {\n  var url = this.buildUrl(\"\".concat(id, \"/not_spam\"));\n  return this.shopify.request(url, 'POST', undefined, {});\n};\n/**\n * Approves a pending comment.\n *\n * @param {Number} id Comment ID\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\n\nComment.prototype.approve = function approve(id) {\n  var url = this.buildUrl(\"\".concat(id, \"/approve\"));\n  return this.shopify.request(url, 'POST', undefined, {});\n};\n/**\n * Removes a comment.\n *\n * @param {Number} id Comment ID\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\n\nComment.prototype.remove = function remove(id) {\n  var url = this.buildUrl(\"\".concat(id, \"/remove\"));\n  return this.shopify.request(url, 'POST', undefined, {});\n};\n/**\n * Restores a comment.\n *\n * @param {Number} id Comment ID\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\n\nComment.prototype.restore = function restore(id) {\n  var url = this.buildUrl(\"\".concat(id, \"/restore\"));\n  return this.shopify.request(url, 'POST', undefined, {});\n};\n\nmodule.exports = Comment;","map":null,"metadata":{},"sourceType":"script"}