{"ast":null,"code":"'use strict';\n\nvar assign = require('lodash/assign');\n\nvar qs = require('qs');\n\nvar baseChild = require('../mixins/base-child');\n\nvar base = require('../mixins/base');\n/**\n * Creates an Article instance.\n *\n * @param {Shopify} shopify Reference to the Shopify instance\n * @constructor\n * @public\n */\n\n\nfunction Article(shopify) {\n  this.shopify = shopify;\n  this.parentName = 'blogs';\n  this.name = 'articles';\n  this.key = 'article';\n}\n\nassign(Article.prototype, baseChild);\n/**\n * Gets a list of all the authors of articles.\n *\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\nArticle.prototype.authors = function authors() {\n  var key = 'authors';\n  var url = base.buildUrl.call(this, key);\n  return this.shopify.request(url, 'GET', key);\n};\n/**\n * Gets a list of all the tags of articles.\n *\n * @param {Number} [blogId] Blog ID\n * @param {Object} [params] Query parameters\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\n\nArticle.prototype.tags = function tags(blogId, params) {\n  var path = '/admin';\n\n  if (!params && typeof blogId === 'object') {\n    params = blogId;\n    blogId = undefined;\n  }\n\n  if (blogId || blogId === 0) path += \"/blogs/\".concat(blogId);\n  path += \"/\".concat(this.name, \"/tags.json\");\n  if (params) path += '?' + qs.stringify(params, {\n    arrayFormat: 'brackets'\n  });\n  var url = assign({\n    path: path\n  }, this.shopify.baseUrl);\n  return this.shopify.request(url, 'GET', 'tags');\n};\n\nmodule.exports = Article;","map":null,"metadata":{},"sourceType":"script"}