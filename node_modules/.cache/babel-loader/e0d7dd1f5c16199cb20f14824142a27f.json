{"ast":null,"code":"'use strict';\n\nvar assign = require('lodash/assign');\n\nvar base = require('../mixins/base');\n/**\n * Creates a SmartCollection instance.\n *\n * @param {Shopify} shopify Reference to the Shopify instance\n * @constructor\n * @public\n */\n\n\nfunction SmartCollection(shopify) {\n  this.shopify = shopify;\n  this.name = 'smart_collections';\n  this.key = 'smart_collection';\n}\n\nassign(SmartCollection.prototype, base);\n/**\n * Sets the ordering type and/or the manual order of products in a smart\n * collection.\n *\n * @param {Number} id Smart collection ID\n * @param {Object} params Ordering parameters\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\nSmartCollection.prototype.order = function order(id, params) {\n  var url = this.buildUrl(\"\".concat(id, \"/order\"), params);\n  return this.shopify.request(url, 'PUT', undefined, {});\n};\n/**\n * Retrieves a list of products in a smart collection.\n *\n * @param {Number} id Smart collection ID\n * @param {Object} params Query parameters\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\n\nSmartCollection.prototype.products = function products(id, params) {\n  var url = this.buildUrl(\"\".concat(id, \"/products\"), params);\n  return this.shopify.request(url, 'GET', 'products');\n};\n\nmodule.exports = SmartCollection;","map":null,"metadata":{},"sourceType":"script"}