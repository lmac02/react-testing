{"ast":null,"code":"'use strict';\n\nvar assign = require('lodash/assign');\n\nvar omit = require('lodash/omit');\n\nvar base = require('../mixins/base');\n/**\n * Creates an ApplicationCharge instance.\n *\n * @param {Shopify} shopify Reference to the Shopify instance\n * @constructor\n * @public\n */\n\n\nfunction ApplicationCharge(shopify) {\n  this.shopify = shopify;\n  this.name = 'application_charges';\n  this.key = 'application_charge';\n}\n\nassign(ApplicationCharge.prototype, omit(base, ['count', 'delete', 'update']));\n/**\n * Activates a previously accepted one-time application charge.\n *\n * @param {Number} id Application charge ID\n * @param {Object} params Application change properties\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\nApplicationCharge.prototype.activate = function activate(id, params) {\n  var url = this.buildUrl(\"\".concat(id, \"/activate\"));\n  return this.shopify.request(url, 'POST', this.key, params);\n};\n\nmodule.exports = ApplicationCharge;","map":null,"metadata":{},"sourceType":"script"}