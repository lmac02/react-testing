{"ast":null,"code":"'use strict';\n\nvar assign = require('lodash/assign');\n\nvar pick = require('lodash/pick');\n\nvar baseChild = require('../mixins/base-child');\n/**\n * Creates an Asset instance.\n *\n * @param {Shopify} shopify Reference to the Shopify instance\n * @constructor\n * @public\n */\n\n\nfunction Asset(shopify) {\n  this.shopify = shopify;\n  this.parentName = 'themes';\n  this.name = 'assets';\n  this.key = 'asset';\n}\n\nassign(Asset.prototype, pick(baseChild, ['list', 'buildUrl']));\n/**\n * Get a single asset by its ID.\n *\n * @param {Number} themeId Theme ID\n * @param {Object} params Query parameters\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\nAsset.prototype.get = function get(themeId, params) {\n  var url = this.buildUrl(themeId, undefined, params);\n  return this.shopify.request(url, 'GET', this.key);\n};\n/**\n * Creates an asset.\n *\n * @param {Number} themeId Theme ID\n * @param {Object} params Asset properties\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\n\nAsset.prototype.create = function create(themeId, params) {\n  var url = this.buildUrl(themeId);\n  return this.shopify.request(url, 'PUT', this.key, params);\n};\n/**\n * Updates an asset.\n *\n * @param {Number} themeId Theme ID\n * @param {Object} params Asset properties\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\n\nAsset.prototype.update = Asset.prototype.create;\n/**\n * Deletes an asset.\n *\n * @param {Number} themeId Theme ID\n * @param {Object} params Query parameters\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\nAsset.prototype.delete = function remove(themeId, params) {\n  var url = this.buildUrl(themeId, undefined, params);\n  return this.shopify.request(url, 'DELETE');\n};\n\nmodule.exports = Asset;","map":null,"metadata":{},"sourceType":"script"}