{"ast":null,"code":"'use strict';\n\nvar assign = require('lodash/assign');\n\nvar omit = require('lodash/omit');\n\nvar baseChild = require('../mixins/base-child');\n/**\n * Creates a Fulfillment instance.\n *\n * @param {Shopify} shopify Reference to the Shopify instance\n * @constructor\n * @public\n */\n\n\nfunction Fulfillment(shopify) {\n  this.shopify = shopify;\n  this.parentName = 'orders';\n  this.name = 'fulfillments';\n  this.key = 'fulfillment';\n}\n\nassign(Fulfillment.prototype, omit(baseChild, ['delete']));\n/**\n * Completes a pending fulfillment.\n *\n * @param {Number} orderId Order ID\n * @param {Number} id Fulfillment id\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\nFulfillment.prototype.complete = function complete(orderId, id) {\n  var _this = this;\n\n  var url = this.buildUrl(orderId, \"\".concat(id, \"/complete\"));\n  return this.shopify.request(url, 'POST', undefined, {}).then(function (body) {\n    return body[_this.key];\n  });\n};\n/**\n * Opens a pending fulfillment.\n *\n * @param {Number} orderId Order ID\n * @param {Number} id Fulfillment id\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\n\nFulfillment.prototype.open = function open(orderId, id) {\n  var _this2 = this;\n\n  var url = this.buildUrl(orderId, \"\".concat(id, \"/open\"));\n  return this.shopify.request(url, 'POST', undefined, {}).then(function (body) {\n    return body[_this2.key];\n  });\n};\n/**\n * Cancels a pending fulfillment.\n *\n * @param {Number} orderId Order ID\n * @param {Number} id Fulfillment id\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\n\nFulfillment.prototype.cancel = function cancel(orderId, id) {\n  var _this3 = this;\n\n  var url = this.buildUrl(orderId, \"\".concat(id, \"/cancel\"));\n  return this.shopify.request(url, 'POST', undefined, {}).then(function (body) {\n    return body[_this3.key];\n  });\n};\n\nmodule.exports = Fulfillment;","map":null,"metadata":{},"sourceType":"script"}