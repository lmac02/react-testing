{"ast":null,"code":"'use strict';\n\nvar assign = require('lodash/assign');\n\nvar omit = require('lodash/omit');\n\nvar baseChild = require('../mixins/base-child');\n/**\n * Creates a Refund instance.\n *\n * @param {Shopify} shopify Reference to the Shopify instance\n * @constructor\n * @public\n */\n\n\nfunction Refund(shopify) {\n  this.shopify = shopify;\n  this.parentName = 'orders';\n  this.name = 'refunds';\n  this.key = 'refund';\n}\n\nassign(Refund.prototype, omit(baseChild, ['count', 'delete', 'update']));\n/**\n * Calculates a refund.\n *\n * @param {Number} orderId order ID\n * @param {Object} params How much shipping and line items to refund\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\nRefund.prototype.calculate = function calculate(orderId, params) {\n  var url = this.buildUrl(orderId, 'calculate');\n  return this.shopify.request(url, 'POST', this.key, params);\n};\n\nmodule.exports = Refund;","map":null,"metadata":{},"sourceType":"script"}