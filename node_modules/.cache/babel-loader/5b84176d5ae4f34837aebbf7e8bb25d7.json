{"ast":null,"code":"'use strict';\n\nvar assign = require('lodash/assign');\n\nvar omit = require('lodash/omit');\n\nvar baseChild = require('../mixins/base-child');\n\nvar base = require('../mixins/base');\n/**\n * Creates a ProductVariant instance.\n *\n * @param {Shopify} shopify Reference to the Shopify instance\n * @constructor\n * @public\n */\n\n\nfunction ProductVariant(shopify) {\n  this.shopify = shopify;\n  this.parentName = 'products';\n  this.name = 'variants';\n  this.key = 'variant';\n}\n\nassign(ProductVariant.prototype, omit(baseChild, ['get', 'update']));\n/**\n * Gets a single product variant by its ID.\n *\n * @param {Number} id Product variant ID\n * @params {Object} [params] Query parameters\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\nProductVariant.prototype.get = function get(id, params) {\n  var url = base.buildUrl.call(this, id, params);\n  return this.shopify.request(url, 'GET', this.key);\n};\n/**\n * Updates an existing product variant.\n *\n * @param {Number} id Product variant ID\n * @params {Object} params Product variant properties\n * @return {Promise} Promise that resolves with the result\n * @public\n */\n\n\nProductVariant.prototype.update = function update(id, params) {\n  var url = base.buildUrl.call(this, id);\n  return this.shopify.request(url, 'PUT', this.key, params);\n};\n\nmodule.exports = ProductVariant;","map":null,"metadata":{},"sourceType":"script"}